---
//@ts-nocheck
import { ViewTransitions } from 'astro:transitions'
import { SEO } from 'astro-seo'

import config from '@/data/config'

import HeadHrefLangs from './HeadHrefLangs.astro'

export type Props = {
  seo: {
    publishedTime?: Date
    title?: string
    type?: 'article' | 'website'
    description?: string
    noindex?: boolean
    image?: string
    url?: string
  }
  translatedPostSlug?: string
}

const { seo, translatedPostSlug } = Astro.props

const {
  title,
  type = 'website',
  description,
  noindex,
  image,
  url,
  publishedTime,
} = seo

const openGraph = {
  publishedTime,
  title: title || config.title,
  type,
  image: image || '/opengraph-image.jpg',
  alt: title || config.title,
  url: url || config.siteUrl,
  description: description || config.description,
}
---

<head>
  <SEO
    charset="UTF-8"
    title={title || config.title}
    description={description || config.description}
    noindex={noindex || false}
    openGraph={{
      basic: {
        title: openGraph.title,
        type: openGraph.type,
        image: openGraph.image,
      },
      image: {
        alt: openGraph.alt,
      },
      ...(openGraph.publishedTime && {
        article: {
          publishedTime: openGraph.publishedTime.toISOString(),
        },
      }),
    }}
    twitter={{
      creator: config.twitter,
    }}
    extend={{
      link: [
        { rel: 'icon', type: 'image/x-icon', href: '/icons/favicon.ico' },
        {
          rel: 'apple-touch-icon',
          sizes: '57x57',
          href: '/icons/apple-icon-57x57.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '60x60',
          href: '/icons/apple-icon-60x60.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '72x72',
          href: '/icons/apple-icon-72x72.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '76x76',
          href: '/icons/apple-icon-76x76.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '114x114',
          href: '/icons/apple-icon-114x114.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '120x120',
          href: '/icons/apple-icon-120x120.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '144x144',
          href: '/icons/apple-icon-144x144.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '152x152',
          href: '/icons/apple-icon-152x152.png',
        },
        {
          rel: 'apple-touch-icon',
          sizes: '180x180',
          href: '/icons/apple-icon-180x180.png',
        },
        {
          rel: 'icon',
          type: 'image/png',
          sizes: '192x192',
          href: '/icons/android-icon-192x192.png',
        },
        {
          rel: 'icon',
          type: 'image/png',
          sizes: '32x32',
          href: '/icons/favicon-32x32.png',
        },
        {
          rel: 'icon',
          type: 'image/png',
          sizes: '96x96',
          href: '/icons/favicon-96x96.png',
        },
        {
          rel: 'icon',
          type: 'image/png',
          sizes: '16x16',
          href: '/icons/favicon-16x16.png',
        },
        { rel: 'manifest', href: '/manifest.json' },
        { rel: 'sitemap', href: '/sitemap-index.xml' },
      ],
      meta: [
        { name: 'viewport', content: 'width=device-width, initial-scale=1' },
        { name: 'generator', content: Astro.generator },
        {
          name: 'twitter:image',
          content: openGraph.image,
        },
        { name: 'twitter:card', content: 'summary_large_image' },
        { name: 'twitter:title', content: openGraph.title },
        { name: 'twitter:description', content: openGraph.description },
        { name: 'twitter:site', content: config.twitter },
      ],
    }}
  />
  <HeadHrefLangs {translatedPostSlug} />
  <ViewTransitions />
  <script>
    document.addEventListener('astro:page-load', () => {
      const darkModeButton =
        document.querySelector<HTMLButtonElement>('#dark-mode')
      if (
        localStorage.theme === 'dark' ||
        (!('theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        document.documentElement.classList.add('dark')
        darkModeButton.setAttribute('title', 'Toogle light mode')
      } else {
        document.documentElement.classList.remove('dark')
        darkModeButton.setAttribute('title', 'Toogle dark mode')
      }
    })
  </script>
</head>
