---
import { getAbsoluteLocaleUrl } from 'astro:i18n'

import { type Language, locales } from '@/i18n/ui'

const currentLanguage = Astro.currentLocale as Language

const currentUrl = Astro.url.href
const currentPath = Astro.url.pathname

export interface Props {
  translatedPostSlug?: string
}

const { translatedPostSlug } = Astro.props
const { slug } = Astro.params
---

{
  locales.map((supportedLanguage) => {
    const isCurrentLanguage = supportedLanguage === currentLanguage
    const url = isCurrentLanguage
      ? currentUrl
      : translatedPostSlug && slug
        ? getAbsoluteLocaleUrl(supportedLanguage, currentPath).replace(
            slug,
            translatedPostSlug,
          )
        : getAbsoluteLocaleUrl(
            supportedLanguage,
            currentPath.replace(`/${currentLanguage}`, ''),
          )

    if (!url) return null

    return <link rel="alternate" hreflang={supportedLanguage} href={url} />
  })
}
